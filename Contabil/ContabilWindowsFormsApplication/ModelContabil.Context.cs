//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ContabilWindowsFormsApplication
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ContabilEntities : DbContext
    {
        public ContabilEntities()
            : base("name=ContabilEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Contas> Contas { get; set; }
        public virtual DbSet<Empresas> Empresas { get; set; }
        public virtual DbSet<Lancamentos> Lancamentos { get; set; }
    
        public virtual int sp_ContaAlterar(Nullable<int> idconta, string codigo, string nome, string classificacao, string tipo)
        {
            var idcontaParameter = idconta.HasValue ?
                new ObjectParameter("idconta", idconta) :
                new ObjectParameter("idconta", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var classificacaoParameter = classificacao != null ?
                new ObjectParameter("classificacao", classificacao) :
                new ObjectParameter("classificacao", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ContaAlterar", idcontaParameter, codigoParameter, nomeParameter, classificacaoParameter, tipoParameter);
        }
    
        public virtual ObjectResult<sp_ContaBuscar_Result> sp_ContaBuscar(Nullable<int> idconta)
        {
            var idcontaParameter = idconta.HasValue ?
                new ObjectParameter("idconta", idconta) :
                new ObjectParameter("idconta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ContaBuscar_Result>("sp_ContaBuscar", idcontaParameter);
        }
    
        public virtual int sp_ContaExcluir(Nullable<int> idconta)
        {
            var idcontaParameter = idconta.HasValue ?
                new ObjectParameter("idconta", idconta) :
                new ObjectParameter("idconta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ContaExcluir", idcontaParameter);
        }
    
        public virtual int sp_ContaInserir(string codigo, string nome, string classificacao, string tipo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var classificacaoParameter = classificacao != null ?
                new ObjectParameter("classificacao", classificacao) :
                new ObjectParameter("classificacao", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ContaInserir", codigoParameter, nomeParameter, classificacaoParameter, tipoParameter);
        }
    
        public virtual int sp_ContasListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ContasListar");
        }
    
        public virtual int sp_EmpresaAlterar(Nullable<int> idempresa, string nomefantasia, string razaosocial)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var nomefantasiaParameter = nomefantasia != null ?
                new ObjectParameter("nomefantasia", nomefantasia) :
                new ObjectParameter("nomefantasia", typeof(string));
    
            var razaosocialParameter = razaosocial != null ?
                new ObjectParameter("razaosocial", razaosocial) :
                new ObjectParameter("razaosocial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmpresaAlterar", idempresaParameter, nomefantasiaParameter, razaosocialParameter);
        }
    
        public virtual ObjectResult<sp_EmpresaBuscar_Result> sp_EmpresaBuscar(Nullable<int> idempresa)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmpresaBuscar_Result>("sp_EmpresaBuscar", idempresaParameter);
        }
    
        public virtual int sp_EmpresaExcluir(Nullable<int> idempresa)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmpresaExcluir", idempresaParameter);
        }
    
        public virtual int sp_EmpresaInserir(string nomefantasia, string razaosocial)
        {
            var nomefantasiaParameter = nomefantasia != null ?
                new ObjectParameter("nomefantasia", nomefantasia) :
                new ObjectParameter("nomefantasia", typeof(string));
    
            var razaosocialParameter = razaosocial != null ?
                new ObjectParameter("razaosocial", razaosocial) :
                new ObjectParameter("razaosocial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmpresaInserir", nomefantasiaParameter, razaosocialParameter);
        }
    
        public virtual ObjectResult<sp_EmpresasListar_Result> sp_EmpresasListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmpresasListar_Result>("sp_EmpresasListar");
        }
    
        public virtual int sp_LancamentoExcluir(Nullable<int> idlancamento)
        {
            var idlancamentoParameter = idlancamento.HasValue ?
                new ObjectParameter("idlancamento", idlancamento) :
                new ObjectParameter("idlancamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LancamentoExcluir", idlancamentoParameter);
        }
    
        public virtual int sp_LancamentoInserir(Nullable<int> idempresa, Nullable<int> idconta, Nullable<System.DateTime> data, Nullable<decimal> valor, Nullable<int> idcontadebito, Nullable<int> idcontacredito, string historico)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var idcontaParameter = idconta.HasValue ?
                new ObjectParameter("idconta", idconta) :
                new ObjectParameter("idconta", typeof(int));
    
            var dataParameter = data.HasValue ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(System.DateTime));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var idcontadebitoParameter = idcontadebito.HasValue ?
                new ObjectParameter("idcontadebito", idcontadebito) :
                new ObjectParameter("idcontadebito", typeof(int));
    
            var idcontacreditoParameter = idcontacredito.HasValue ?
                new ObjectParameter("idcontacredito", idcontacredito) :
                new ObjectParameter("idcontacredito", typeof(int));
    
            var historicoParameter = historico != null ?
                new ObjectParameter("historico", historico) :
                new ObjectParameter("historico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LancamentoInserir", idempresaParameter, idcontaParameter, dataParameter, valorParameter, idcontadebitoParameter, idcontacreditoParameter, historicoParameter);
        }
    
        public virtual ObjectResult<sp_ContasListarTodas_Result> sp_ContasListarTodas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ContasListarTodas_Result>("sp_ContasListarTodas");
        }
    
        public virtual ObjectResult<sp_EmpresasListarTodas_Result> sp_EmpresasListarTodas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmpresasListarTodas_Result>("sp_EmpresasListarTodas");
        }
    
        public virtual ObjectResult<sp_LancamentosListarPorEmpresaEPorData_Result> sp_LancamentosListarPorEmpresaEPorData(Nullable<int> idempresa, Nullable<System.DateTime> dataanterior, Nullable<System.DateTime> dataposterior)
        {
            var idempresaParameter = idempresa.HasValue ?
                new ObjectParameter("idempresa", idempresa) :
                new ObjectParameter("idempresa", typeof(int));
    
            var dataanteriorParameter = dataanterior.HasValue ?
                new ObjectParameter("dataanterior", dataanterior) :
                new ObjectParameter("dataanterior", typeof(System.DateTime));
    
            var dataposteriorParameter = dataposterior.HasValue ?
                new ObjectParameter("dataposterior", dataposterior) :
                new ObjectParameter("dataposterior", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LancamentosListarPorEmpresaEPorData_Result>("sp_LancamentosListarPorEmpresaEPorData", idempresaParameter, dataanteriorParameter, dataposteriorParameter);
        }
    
        public virtual int sp_LancamentoAlterar(Nullable<int> idlancamento, Nullable<System.DateTime> data, Nullable<decimal> valor, Nullable<int> idcontadebito, Nullable<int> idcontacredito, string historico)
        {
            var idlancamentoParameter = idlancamento.HasValue ?
                new ObjectParameter("idlancamento", idlancamento) :
                new ObjectParameter("idlancamento", typeof(int));
    
            var dataParameter = data.HasValue ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(System.DateTime));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(decimal));
    
            var idcontadebitoParameter = idcontadebito.HasValue ?
                new ObjectParameter("idcontadebito", idcontadebito) :
                new ObjectParameter("idcontadebito", typeof(int));
    
            var idcontacreditoParameter = idcontacredito.HasValue ?
                new ObjectParameter("idcontacredito", idcontacredito) :
                new ObjectParameter("idcontacredito", typeof(int));
    
            var historicoParameter = historico != null ?
                new ObjectParameter("historico", historico) :
                new ObjectParameter("historico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LancamentoAlterar", idlancamentoParameter, dataParameter, valorParameter, idcontadebitoParameter, idcontacreditoParameter, historicoParameter);
        }
    
        public virtual ObjectResult<sp_LancamentoBuscar_Result> sp_LancamentoBuscar(Nullable<int> idlancamento)
        {
            var idlancamentoParameter = idlancamento.HasValue ?
                new ObjectParameter("idlancamento", idlancamento) :
                new ObjectParameter("idlancamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LancamentoBuscar_Result>("sp_LancamentoBuscar", idlancamentoParameter);
        }
    }
}
